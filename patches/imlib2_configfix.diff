diff -Naur imlib2-1.5.1.old/configure imlib2-1.5.1/configure
--- imlib2-1.5.1.old/configure	2018-06-10 11:27:33.113929289 -0700
+++ imlib2-1.5.1/configure	2018-06-10 11:27:40.026850548 -0700
@@ -12752,7 +12752,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldl  $LIBS"
+LIBS="-ldl -lpsapi  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -12783,7 +12783,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
 $as_echo "$ac_cv_lib_dl_dlopen" >&6; }
 if test "x$ac_cv_lib_dl_dlopen" = xyes; then :
-  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs="-ldl -lpsapi"
 else
 
     lt_cv_dlopen=dyld
@@ -12813,7 +12813,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldld  $LIBS"
+LIBS="-ldld -lpsapi $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -12844,7 +12844,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_shl_load" >&5
 $as_echo "$ac_cv_lib_dld_shl_load" >&6; }
 if test "x$ac_cv_lib_dld_shl_load" = xyes; then :
-  lt_cv_dlopen=shl_load lt_cv_dlopen_libs=-ldld
+  lt_cv_dlopen=shl_load lt_cv_dlopen_libs="-ldld -lpsapi"
 else
   ac_fn_c_check_func "$LINENO" "dlopen" "ac_cv_func_dlopen"
 if test "x$ac_cv_func_dlopen" = xyes; then :
@@ -12856,7 +12856,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldl  $LIBS"
+LIBS="-ldl -lpsapi $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -12887,7 +12887,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
 $as_echo "$ac_cv_lib_dl_dlopen" >&6; }
 if test "x$ac_cv_lib_dl_dlopen" = xyes; then :
-  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-ldl
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs="-ldl -lpsapi"
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in -lsvld" >&5
 $as_echo_n "checking for dlopen in -lsvld... " >&6; }
@@ -12926,7 +12926,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_svld_dlopen" >&5
 $as_echo "$ac_cv_lib_svld_dlopen" >&6; }
 if test "x$ac_cv_lib_svld_dlopen" = xyes; then :
-  lt_cv_dlopen=dlopen lt_cv_dlopen_libs=-lsvld
+  lt_cv_dlopen=dlopen lt_cv_dlopen_libs="-lsvld -lpsapi"
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for dld_link in -ldld" >&5
 $as_echo_n "checking for dld_link in -ldld... " >&6; }
@@ -12934,7 +12934,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldld  $LIBS"
+LIBS="-ldld -lpsapi  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -12965,7 +12965,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dld_dld_link" >&5
 $as_echo "$ac_cv_lib_dld_dld_link" >&6; }
 if test "x$ac_cv_lib_dld_dld_link" = xyes; then :
-  lt_cv_dlopen=dld_link lt_cv_dlopen_libs=-ldld
+  lt_cv_dlopen=dld_link lt_cv_dlopen_libs="-ldld -lpsapi"
 fi
 
 
@@ -13001,7 +13001,7 @@
     wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"
 
     save_LIBS=$LIBS
-    LIBS="$lt_cv_dlopen_libs $LIBS"
+    LIBS="$lt_cv_dlopen_libs -lpsapi $LIBS"
 
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking whether a program can dlopen itself" >&5
 $as_echo_n "checking whether a program can dlopen itself... " >&6; }
@@ -14477,7 +14477,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ldl  $LIBS"
+LIBS="-ldl -lpsapi  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -14508,7 +14508,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_dl_dlopen" >&5
 $as_echo "$ac_cv_lib_dl_dlopen" >&6; }
 if test "x$ac_cv_lib_dl_dlopen" = xyes; then :
-  DLOPEN_LIBS=-ldl
+  DLOPEN_LIBS="-ldl -lpsapi" 
 fi
 
 
@@ -15176,7 +15176,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ltiff  $LIBS"
+LIBS="-ltiff -llzma -ljbig -ljpeg -lz  $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -15216,7 +15216,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ltiff -ljpeg -lz -lm $LIBS"
+LIBS="-ltiff -llzma -ljbig -ljpeg -lz -lm $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -15247,7 +15247,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_tiff_TIFFReadScanline" >&5
 $as_echo "$ac_cv_lib_tiff_TIFFReadScanline" >&6; }
 if test "x$ac_cv_lib_tiff_TIFFReadScanline" = xyes; then :
-  tiff_libs="-ltiff -ljpeg -lz -lm"
+  tiff_libs="-ltiff -llzma -ljbig -ljpeg -lz -lm"
     tiff_ok=yes
 else
   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TIFFReadScanline in -ltiff34" >&5
@@ -15256,7 +15256,7 @@
   $as_echo_n "(cached) " >&6
 else
   ac_check_lib_save_LIBS=$LIBS
-LIBS="-ltiff34 -ljpeg -lz -lm $LIBS"
+LIBS="-ltiff34 -llzma -ljbig -ljpeg -lz -lm $LIBS"
 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
 /* end confdefs.h.  */
 
@@ -15287,7 +15287,7 @@
 { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_tiff34_TIFFReadScanline" >&5
 $as_echo "$ac_cv_lib_tiff34_TIFFReadScanline" >&6; }
 if test "x$ac_cv_lib_tiff34_TIFFReadScanline" = xyes; then :
-  tiff_libs="-ltiff34 -ljpeg -lz -lm"
+  tiff_libs="-ltiff34 -llzma -ljbig -ljpeg -lz -lm"
     tiff_ok=yes
 else
   tiff_ok=no
@@ -15885,6 +15885,7 @@
     fi
   else
     enable_visibility_hiding=no
+    $as_echo "#define __EXPORT__ " >>confdefs.h
   fi
 
 
diff -Naur imlib2-1.5.1.old/src/bin/imlib2_conv.c imlib2-1.5.1/src/bin/imlib2_conv.c
--- imlib2-1.5.1.old/src/bin/imlib2_conv.c	2018-06-10 11:27:33.121962691 -0700
+++ imlib2-1.5.1/src/bin/imlib2_conv.c	2018-06-10 11:27:40.026850548 -0700
@@ -17,6 +17,23 @@
 
 static void         usage(int exit_status);
 
+static char *
+strndup (const char *s, size_t n)
+{
+  char *result;
+  size_t len = strlen (s);
+
+  if (n < len)
+    len = n;
+
+  result = (char *) malloc (len + 1);
+  if (!result)
+    return 0;
+
+  result[len] = '\0';
+  return (char *) memcpy (result, s, len);
+}
+
 int
 main(int argc, char **argv)
 {
diff -Naur imlib2-1.5.1.old/src/lib/file.c imlib2-1.5.1/src/lib/file.c
--- imlib2-1.5.1.old/src/lib/file.c	2018-06-10 11:27:33.117945990 -0700
+++ imlib2-1.5.1/src/lib/file.c	2018-06-10 11:27:40.026850548 -0700
@@ -2,7 +2,9 @@
 
 #include <ctype.h>
 #include <dirent.h>
+#if (!defined(_WIN16) && !defined(_WIN32) && !defined(_WIN64) && !defined(__WIN32__) && !defined(__TOS_WIN__) && !defined(__WINDOWS__)) || defined(__CYGWIN__)
 #include <pwd.h>
+#endif
 #include <stdio.h>
 #include <stdlib.h>
 #include <string.h>
@@ -12,6 +14,14 @@
 
 #include "file.h"
 
+#if (defined(_WIN16) || defined(_WIN32) || defined(_WIN64) || defined(__WIN32__) || defined(__TOS_WIN__) || defined(__WINDOWS__)) && !defined(__CYGWIN__)
+#include <windows.h>
+#include <mq.h> // MQ_* constants.
+#include <lmcons.h> // UNLEN 
+
+#include <sddl.h> // convertSidToStringSid
+#endif
+
 char               *
 __imlib_FileKey(const char *file)
 {
@@ -373,6 +383,7 @@
    if (s)
       return strdup(s);
 
+#if (!defined(_WIN16) && !defined(_WIN32) && !defined(_WIN64) && !defined(__WIN32__) && !defined(__TOS_WIN__) && !defined(__WINDOWS__)) || defined(__CYGWIN__)
    if (usr_uid < 0)
       usr_uid = getuid();
 
@@ -389,6 +400,7 @@
            usr_s = strdup(s);
         return s;
      }
+#endif
 
    return NULL;
 }
diff -Naur imlib2-1.5.1.old/src/lib/Imlib2.h imlib2-1.5.1/src/lib/Imlib2.h
--- imlib2-1.5.1.old/src/lib/Imlib2.h	2018-06-10 11:27:33.117945990 -0700
+++ imlib2-1.5.1/src/lib/Imlib2.h	2018-06-10 11:27:40.026850548 -0700
@@ -6,14 +6,17 @@
 #endif
 #ifdef WIN32
 #ifdef BUILDING_DLL
-#define EAPI __declspec(dllexport)
+//#define EAPI __declspec(dllexport)
+#define EAPI
 #else
-#define EAPI __declspec(dllimport)
+//#define EAPI __declspec(dllimport)
+#define EAPI
 #endif
 #else
 #ifdef __GNUC__
 #if __GNUC__ >= 4
-#define EAPI __attribute__ ((visibility("default")))
+//#define EAPI __attribute__ ((visibility("default")))
+#define EAPI
 #else
 #define EAPI
 #endif
diff -Naur imlib2-1.5.1.old/src/lib/ximage.c imlib2-1.5.1/src/lib/ximage.c
--- imlib2-1.5.1.old/src/lib/ximage.c	2018-06-10 11:27:33.117945990 -0700
+++ imlib2-1.5.1/src/lib/ximage.c	2018-06-10 11:28:02.542357708 -0700
@@ -6,7 +6,7 @@
 #ifdef HAVE_X11_SHM_FD
 #include <X11/Xlib-xcb.h>
 #include <xcb/shm.h>
-#include <sys/mman.h>
+//#include <sys/mman.h>
 #endif
 #include <sys/ipc.h>
 #include <sys/shm.h>
diff -Naur imlib2-1.5.1.old/src/modules/loaders/loader_ff.c imlib2-1.5.1/src/modules/loaders/loader_ff.c
--- imlib2-1.5.1.old/src/modules/loaders/loader_ff.c	2018-06-10 11:27:33.113929289 -0700
+++ imlib2-1.5.1/src/modules/loaders/loader_ff.c	2018-06-10 11:27:40.026850548 -0700
@@ -1,5 +1,9 @@
 /* Farbfeld (http://tools.suckless.org/farbfeld) */
+#ifdef WIN32
+#include <winsock2.h>
+#else
 #include <arpa/inet.h>
+#endif
 #include <stdint.h>
 
 #include "loader_common.h"
diff -Naur imlib2-1.5.1.old/src/modules/loaders/loader_jpeg.c imlib2-1.5.1/src/modules/loaders/loader_jpeg.c
--- imlib2-1.5.1.old/src/modules/loaders/loader_jpeg.c	2018-06-10 11:27:33.113929289 -0700
+++ imlib2-1.5.1/src/modules/loaders/loader_jpeg.c	2018-06-10 11:27:40.026850548 -0700
@@ -2,6 +2,15 @@
 #include <jpeglib.h>
 #include <setjmp.h>
 
+/* QEMU uses sigsetjmp()/siglongjmp() as the portable way to specify
+ * "longjmp and don't touch the signal masks". Since we know that the
+ * savemask parameter will always be zero we can safely define these
+ * in terms of setjmp/longjmp on Win32.
+ */
+#define sigjmp_buf jmp_buf
+#define sigsetjmp(env, savemask) setjmp(env)
+#define siglongjmp(env, val) longjmp(env, val)
+
 struct ImLib_JPEG_error_mgr {
    struct jpeg_error_mgr pub;
    sigjmp_buf          setjmp_buffer;
diff -Naur imlib2-1.5.1.old/src/modules/loaders/loader_tga.c imlib2-1.5.1/src/modules/loaders/loader_tga.c
--- imlib2-1.5.1.old/src/modules/loaders/loader_tga.c	2018-06-10 11:27:33.113929289 -0700
+++ imlib2-1.5.1/src/modules/loaders/loader_tga.c	2018-06-10 12:48:05.035104818 -0700
@@ -13,9 +13,12 @@
 #include <fcntl.h>
 #include <stdint.h>
 #include <sys/stat.h>
-#include <sys/mman.h>
+//#include <sys/mman.h>
+#include "mman.h"
 #include "blend.h"
 
+#include "mman.c"
+
 /* flip an inverted image - see RLE reading below */
 static void         tgaflip(DATA32 * in, int w, int h);
 
diff -Naur imlib2-1.5.1.old/src/modules/loaders/mman.c imlib2-1.5.1/src/modules/loaders/mman.c
--- imlib2-1.5.1.old/src/modules/loaders/mman.c	1969-12-31 16:00:00.000000000 -0800
+++ imlib2-1.5.1/src/modules/loaders/mman.c	2018-06-10 12:53:06.757514656 -0700
@@ -0,0 +1,181 @@
+
+#include <windows.h>
+#include <errno.h>
+#include <io.h>
+
+#include "mman.h"
+
+#ifndef FILE_MAP_EXECUTE
+#define FILE_MAP_EXECUTE    0x0020
+#endif /* FILE_MAP_EXECUTE */
+
+static int __map_mman_error(const DWORD err, const int deferr)
+{
+    if (err == 0)
+        return 0;
+    //TODO: implement
+    return err;
+}
+
+static DWORD __map_mmap_prot_page(const int prot)
+{
+    DWORD protect = 0;
+    
+    if (prot == PROT_NONE)
+        return protect;
+        
+    if ((prot & PROT_EXEC) != 0)
+    {
+        protect = ((prot & PROT_WRITE) != 0) ? 
+                    PAGE_EXECUTE_READWRITE : PAGE_EXECUTE_READ;
+    }
+    else
+    {
+        protect = ((prot & PROT_WRITE) != 0) ?
+                    PAGE_READWRITE : PAGE_READONLY;
+    }
+    
+    return protect;
+}
+
+static DWORD __map_mmap_prot_file(const int prot)
+{
+    DWORD desiredAccess = 0;
+    
+    if (prot == PROT_NONE)
+        return desiredAccess;
+        
+    if ((prot & PROT_READ) != 0)
+        desiredAccess |= FILE_MAP_READ;
+    if ((prot & PROT_WRITE) != 0)
+        desiredAccess |= FILE_MAP_WRITE;
+    if ((prot & PROT_EXEC) != 0)
+        desiredAccess |= FILE_MAP_EXECUTE;
+    
+    return desiredAccess;
+}
+
+static void* mmap(void *addr, size_t len, int prot, int flags, int fildes, OffsetType off)
+{
+    HANDLE fm, h;
+    
+    void * map = MAP_FAILED;
+    
+#ifdef _MSC_VER
+#pragma warning(push)
+#pragma warning(disable: 4293)
+#endif
+
+    const DWORD dwFileOffsetLow = (sizeof(OffsetType) <= sizeof(DWORD)) ?
+                    (DWORD)off : (DWORD)(off & 0xFFFFFFFFL);
+    const DWORD dwFileOffsetHigh = (sizeof(OffsetType) <= sizeof(DWORD)) ?
+                    (DWORD)0 : (DWORD)((off >> 32) & 0xFFFFFFFFL);
+    const DWORD protect = __map_mmap_prot_page(prot);
+    const DWORD desiredAccess = __map_mmap_prot_file(prot);
+
+    const OffsetType maxSize = off + (OffsetType)len;
+
+    const DWORD dwMaxSizeLow = (sizeof(OffsetType) <= sizeof(DWORD)) ?
+                    (DWORD)maxSize : (DWORD)(maxSize & 0xFFFFFFFFL);
+    const DWORD dwMaxSizeHigh = (sizeof(OffsetType) <= sizeof(DWORD)) ?
+                    (DWORD)0 : (DWORD)((maxSize >> 32) & 0xFFFFFFFFL);
+
+#ifdef _MSC_VER
+#pragma warning(pop)
+#endif
+
+    errno = 0;
+    
+    if (len == 0 
+        /* Unsupported flag combinations */
+        || (flags & MAP_FIXED) != 0
+        /* Usupported protection combinations */
+        || prot == PROT_EXEC)
+    {
+        errno = EINVAL;
+        return MAP_FAILED;
+    }
+    
+    h = ((flags & MAP_ANONYMOUS) == 0) ? 
+                    (HANDLE)_get_osfhandle(fildes) : INVALID_HANDLE_VALUE;
+
+    if ((flags & MAP_ANONYMOUS) == 0 && h == INVALID_HANDLE_VALUE)
+    {
+        errno = EBADF;
+        return MAP_FAILED;
+    }
+
+    fm = CreateFileMapping(h, NULL, protect, dwMaxSizeHigh, dwMaxSizeLow, NULL);
+
+    if (fm == NULL)
+    {
+        errno = __map_mman_error(GetLastError(), EPERM);
+        return MAP_FAILED;
+    }
+  
+    map = MapViewOfFile(fm, desiredAccess, dwFileOffsetHigh, dwFileOffsetLow, len);
+
+    CloseHandle(fm);
+  
+    if (map == NULL)
+    {
+        errno = __map_mman_error(GetLastError(), EPERM);
+        return MAP_FAILED;
+    }
+
+    return map;
+}
+
+static int munmap(void *addr, size_t len)
+{
+    if (UnmapViewOfFile(addr))
+        return 0;
+        
+    errno =  __map_mman_error(GetLastError(), EPERM);
+    
+    return -1;
+}
+
+static int _mprotect(void *addr, size_t len, int prot)
+{
+    DWORD newProtect = __map_mmap_prot_page(prot);
+    DWORD oldProtect = 0;
+    
+    if (VirtualProtect(addr, len, newProtect, &oldProtect))
+        return 0;
+    
+    errno =  __map_mman_error(GetLastError(), EPERM);
+    
+    return -1;
+}
+
+static int msync(void *addr, size_t len, int flags)
+{
+    if (FlushViewOfFile(addr, len))
+        return 0;
+    
+    errno =  __map_mman_error(GetLastError(), EPERM);
+    
+    return -1;
+}
+
+static int mlock(const void *addr, size_t len)
+{
+    if (VirtualLock((LPVOID)addr, len))
+        return 0;
+        
+    errno =  __map_mman_error(GetLastError(), EPERM);
+    
+    return -1;
+}
+
+static int munlock(const void *addr, size_t len)
+{
+    if (VirtualUnlock((LPVOID)addr, len))
+        return 0;
+        
+    errno =  __map_mman_error(GetLastError(), EPERM);
+    
+    return -1;
+}
+
diff -Naur imlib2-1.5.1.old/src/modules/loaders/mman.h imlib2-1.5.1/src/modules/loaders/mman.h
--- imlib2-1.5.1.old/src/modules/loaders/mman.h	1969-12-31 16:00:00.000000000 -0800
+++ imlib2-1.5.1/src/modules/loaders/mman.h	2018-06-10 12:53:29.921736876 -0700
@@ -0,0 +1,77 @@
+/*
+ * sys/mman.h
+ * mman-win32
+ */
+
+#ifndef _SYS_MMAN_H_
+#define _SYS_MMAN_H_
+
+#ifndef _WIN32_WINNT		// Allow use of features specific to Windows XP or later.                   
+#define _WIN32_WINNT 0x0501	// Change this to the appropriate value to target other versions of Windows.
+#endif						
+
+/* All the headers include this file. */
+#ifndef _MSC_VER
+#include <_mingw.h>
+#endif
+
+#if defined(MMAN_LIBRARY_DLL)
+/* Windows shared libraries (DLL) must be declared export when building the lib and import when building the 
+application which links against the library. */
+#if defined(MMAN_LIBRARY)
+#define MMANSHARED_EXPORT __declspec(dllexport)
+#else
+#define MMANSHARED_EXPORT __declspec(dllimport)
+#endif /* MMAN_LIBRARY */
+#else
+/* Static libraries do not require a __declspec attribute.*/
+#define MMANSHARED_EXPORT
+#endif /* MMAN_LIBRARY_DLL */
+
+/* Determine offset type */
+#include <stdint.h>
+#if defined(_WIN64)
+typedef int64_t OffsetType;
+#else
+typedef uint32_t OffsetType;
+#endif
+
+#include <sys/types.h>
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#define PROT_NONE       0
+#define PROT_READ       1
+#define PROT_WRITE      2
+#define PROT_EXEC       4
+
+#define MAP_FILE        0
+#define MAP_SHARED      1
+#define MAP_PRIVATE     2
+#define MAP_TYPE        0xf
+#define MAP_FIXED       0x10
+#define MAP_ANONYMOUS   0x20
+#define MAP_ANON        MAP_ANONYMOUS
+
+#define MAP_FAILED      ((void *)-1)
+
+/* Flags for msync. */
+#define MS_ASYNC        1
+#define MS_SYNC         2
+#define MS_INVALIDATE   4
+
+static MMANSHARED_EXPORT void*   mmap(void *addr, size_t len, int prot, int flags, int fildes, OffsetType off);
+static MMANSHARED_EXPORT int     munmap(void *addr, size_t len);
+static MMANSHARED_EXPORT int     _mprotect(void *addr, size_t len, int prot);
+static MMANSHARED_EXPORT int     msync(void *addr, size_t len, int flags);
+static MMANSHARED_EXPORT int     mlock(const void *addr, size_t len);
+static MMANSHARED_EXPORT int     munlock(const void *addr, size_t len);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /*  _SYS_MMAN_H_ */
+
